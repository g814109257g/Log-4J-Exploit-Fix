package me.rhys.fix.bungeecord.listener;

import me.rhys.fix.bungeecord.Plugin;
import me.rhys.fix.common.ConfigKeys;
import net.md_5.bungee.api.ChatColor;
import net.md_5.bungee.api.ProxyServer;
import net.md_5.bungee.api.chat.ComponentBuilder;
import net.md_5.bungee.api.connection.ProxiedPlayer;
import net.md_5.bungee.api.event.ChatEvent;
import net.md_5.bungee.api.plugin.Listener;
import net.md_5.bungee.config.Configuration;
import net.md_5.bungee.event.EventHandler;

import java.util.Locale;

public class ChatListener implements Listener {

    @EventHandler
    public void onChat(ChatEvent event) {
        if (event.getMessage().toLowerCase(Locale.ROOT).contains("${jndi:")) {
            event.setCancelled(true);
            if(event.getSender() instanceof ProxiedPlayer) {
                ProxiedPlayer player = (ProxiedPlayer) event.getSender();
                Configuration configuration = Plugin.getInstance().getConfig();
                if(configuration.getBoolean(ConfigKeys.NOTIFY_ENABLED)) {
                    String notifyMessage = ChatColor.translateAlternateColorCodes(
                            '&',
                            configuration.getString(ConfigKeys.NOTIFY_MESSAGE)
                    ).replace("%player%", player.getName());
                    ProxyServer.getInstance().getPlayers().stream()
                            .filter(staff -> staff.hasPermission(configuration.getString(ConfigKeys.NOTIFY_PERMISSION)))
                            .forEach(staff -> staff.sendMessage(new ComponentBuilder().append(notifyMessage).create()));
                }
                if(configuration.getBoolean(ConfigKeys.PUNISHMENTS_ENABLED)) {
                    String command = configuration.getString(ConfigKeys.PUNISHMENTS_COMMAND)
                            .replace("%player%", player.getName());
                    ProxyServer.getInstance().getPluginManager().dispatchCommand(
                            ProxyServer.getInstance().getConsole(),
                            command
                    );
                }
            }
        }
    }
}
