package me.rhys.fix.bungeecord;

import com.google.common.io.ByteStreams;
import lombok.Getter;
import me.rhys.fix.bungeecord.listener.ChatListener;
import net.md_5.bungee.config.Configuration;
import net.md_5.bungee.config.ConfigurationProvider;
import net.md_5.bungee.config.YamlConfiguration;

import java.io.*;
import java.util.logging.Level;

public class Plugin extends net.md_5.bungee.api.plugin.Plugin {

    @Getter private static Plugin instance;
    @Getter private Configuration config;

    @Override
    public void onEnable() {
        instance = this;
        if(!loadConfig()) {
            getLogger().log(Level.SEVERE, "Failed to load config, the plugin won't be loaded!");
            return;
        }
        getProxy().getPluginManager().registerListener(this, new ChatListener());
    }

    private boolean loadConfig() {
        if(!getDataFolder().exists())
            getDataFolder().mkdir();
        File file = new File(getDataFolder(), "config.yml");
        try {
            if(!file.exists()) {
                file.createNewFile();
                try (InputStream inputStream = getResourceAsStream("config.yml");
                     OutputStream outputStream = new FileOutputStream(file)) {
                    ByteStreams.copy(inputStream, outputStream);
                }
            }
            this.config = ConfigurationProvider.getProvider(YamlConfiguration.class).load(file);
        } catch (IOException exception) {
            exception.printStackTrace();
            return false;
        }
        return true;
    }

}
